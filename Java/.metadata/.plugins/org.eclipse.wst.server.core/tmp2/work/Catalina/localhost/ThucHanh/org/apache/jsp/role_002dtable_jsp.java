/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-08-11 01:48:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ThucHanh.Model.Role;
import java.util.List;

public final class role_002dtable_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ThucHanh.Model.Role");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Simple Data</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("	 <!-- Nhận giá trị từ RoleController req.setAttribute(\"/role\", roleService.getRole()); -->\r\n");
      out.write("	 ");
 
	 List<Role> list = (List<Role>) request.getAttribute("role");
	 
      out.write("\r\n");
      out.write("	 \r\n");
      out.write("<body>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <table>\r\n");
      out.write("    	<thead>\r\n");
      out.write("    	\r\n");
      out.write("    		<tr>\r\n");
      out.write("    		<th>STT</th>\r\n");
      out.write("    		<th>Tên Quyền</th>\r\n");
      out.write("    		<th>Mô Tả</th>\r\n");
      out.write("    		<th>Hành Động</th>\r\n");
      out.write("    		</tr>\r\n");
      out.write("    		\r\n");
      out.write("    	</thead>\r\n");
      out.write("    	\r\n");
      out.write("    	<tbody>\r\n");
      out.write("    		");
 for(Role role: list){ 
      out.write("\r\n");
      out.write("    		\r\n");
      out.write("    			<tr>\r\n");
      out.write("    				<td> ");
      out.print( role.getId() );
      out.write("</td>\r\n");
      out.write("    				<td> ");
      out.print( role.getRole_name() );
      out.write("</td>\r\n");
      out.write("    				<td> ");
      out.print( role.getDescription() );
      out.write("</td>\r\n");
      out.write("    				<td>\r\n");
      out.write("    				<button>Sửa</button>\r\n");
      out.write("    				<button class=\"btn-xoa\" id-role=");
      out.print( role.getId() );
      out.write(">Xóa</button>\r\n");
      out.write("    				\r\n");
      out.write("    					\r\n");
      out.write("    				\r\n");
      out.write("    				</td>\r\n");
      out.write("    			</tr>\r\n");
      out.write("    		\r\n");
      out.write("    		\r\n");
      out.write("    		");
 } 
      out.write("\r\n");
      out.write("   		 </tbody>\r\n");
      out.write("    	\r\n");
      out.write("    </table>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("      <!-- Jquery -->\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"\r\n");
      out.write("     >\r\n");
      out.write("        </script>\r\n");
      out.write("        \r\n");
      out.write("          <!-- Popper -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"\r\n");
      out.write("        integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\">\r\n");
      out.write("        </script>\r\n");
      out.write("        \r\n");
      out.write("     <script src=\"js/role.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
